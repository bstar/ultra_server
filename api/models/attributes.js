'use strict';

module.exports = (sequelize, DataTypes) => {
  var Attributes = sequelize.define('attributes', {
    boidId: DataTypes.STRING,
    game_date: DataTypes.STRING,
    att_growth: DataTypes.INTEGER,
    player_age: DataTypes.INTEGER,
    technical_rating: DataTypes.INTEGER,
    mental_rating: DataTypes.INTEGER,
    physical_rating: DataTypes.INTEGER,
    combined_rating: DataTypes.INTEGER,
    
    mental_off_weighted: DataTypes.REAL,
    mental_def_weighted: DataTypes.REAL,
    mental_two_weighted: DataTypes.REAL,
    physical_off_weighted: DataTypes.REAL,
    physical_def_weighted: DataTypes.REAL,
    physical_two_weighted: DataTypes.REAL,
    technical_off_weighted: DataTypes.REAL,
    technical_def_weighted: DataTypes.REAL,
    technical_two_weighted: DataTypes.REAL,
    combined_off_weighted: DataTypes.REAL,
    combined_def_weighted: DataTypes.REAL,
    combined_two_weighted: DataTypes.REAL,
    
    loyalty: DataTypes.INTEGER,
    pressure: DataTypes.INTEGER,
    professionalism: DataTypes.INTEGER,
    sportsmanship: DataTypes.INTEGER,
    temperment: DataTypes.INTEGER,
    consistency: DataTypes.INTEGER,
    decisions: DataTypes.INTEGER,
    dirtiness: DataTypes.INTEGER,
    potential_ability: DataTypes.INTEGER,
    adaptability: DataTypes.INTEGER,
    ambition: DataTypes.INTEGER,
    important_matches: DataTypes.INTEGER,
    pass_tendency: DataTypes.INTEGER,
    fighting: DataTypes.INTEGER,
    injury_proneness: DataTypes.INTEGER,
    natural_fitness: DataTypes.INTEGER,
    agitation: DataTypes.INTEGER,
    one_on_ones: DataTypes.INTEGER,
    versatility: DataTypes.INTEGER,
    goaltender: DataTypes.INTEGER,
    left_defence: DataTypes.INTEGER,
    right_defence: DataTypes.INTEGER,
    left_wing: DataTypes.INTEGER,
    right_wing: DataTypes.INTEGER,
    center: DataTypes.INTEGER,
    aggression: DataTypes.INTEGER,
    anticipation: DataTypes.INTEGER,
    bravery: DataTypes.INTEGER,
    creativity: DataTypes.INTEGER,
    determination: DataTypes.INTEGER,
    flair: DataTypes.INTEGER,
    influence: DataTypes.INTEGER,
    teamwork: DataTypes.INTEGER,
    work_rate: DataTypes.INTEGER,
    acceleration: DataTypes.INTEGER,
    agility: DataTypes.INTEGER,
    balance: DataTypes.INTEGER,
    speed: DataTypes.INTEGER,
    stamina: DataTypes.INTEGER,
    strength: DataTypes.INTEGER,
    checking: DataTypes.INTEGER,
    deflections: DataTypes.INTEGER,
    deking: DataTypes.INTEGER,
    faceoffs: DataTypes.INTEGER,
    hitting: DataTypes.INTEGER,
    off_the_puck: DataTypes.INTEGER,
    passing: DataTypes.INTEGER,
    pokecheck: DataTypes.INTEGER,
    positioning: DataTypes.INTEGER,
    slapshot: DataTypes.INTEGER,
    stickhandling: DataTypes.INTEGER,
    wristshot: DataTypes.INTEGER,
    blocker: DataTypes.INTEGER,
    glove: DataTypes.INTEGER,
    rebound_control: DataTypes.INTEGER,
    recovery: DataTypes.INTEGER,
    reflexes: DataTypes.INTEGER,
    createdAt: DataTypes.DATE,
    updatedAt: DataTypes.DATE,
  });
  
  Attributes.associate = (models) => {
    Attributes.belongsTo(models.boid);
  };
 
  return Attributes;
};
